{
  // Signals to the IDE to generate all files for a given tsconfig.json upon saving.
  "compileOnSave": true,
  "compilerOptions": {
    // Generates corresponding .map file.
    "sourceMap": true,
    // Base directory to resolve non-relative module names https://www.typescriptlang.org/docs/handbook/module-resolution.html#base-url.
    "baseUrl": "./src",
    // Redirect output structure to the directory.
    "outDir": "./dist/out-tsc",
    // Generates corresponding .d.ts file.
    "declaration": false,
    // Specify module code generation:
    "module": "esnext",
    // Determine how modules get resolved. Either "Node" for Node.js/io.js style resolution, https://www.typescriptlang.org/docs/handbook/module-resolution.html
    "moduleResolution": "node",
    // Specify ECMAScript target version
    "target": "esnext",
    // 	Emit __importStar and __importDefault helpers for runtime babel ecosystem compatibility and enable --allowSyntheticDefaultImports for typesystem compatibility
    "esModuleInterop": true,
    // Enables experimental support for ES decorators.
    "experimentalDecorators": true,
    // Import emit helpers (e.g. __extends, __rest, etc..) from tslib
    "importHelpers": true,
    // List of folders to include type definitions from. See https://www.typescriptlang.org/tsconfig#types for more details.
    "typeRoots": [
      "node_modules/@types"
    ],
    // A set of library polyfill files to be included in the final output file.
    "lib": [
      "ESNext",
      "dom"
    ],
    "paths": {
      "@common/*": [
        "@common/*"
      ],
      "@app/*": [
        "app/*"
      ],
      "@env/*": [
        "environments/*"
      ]
    }
  },
  "angularCompilerOptions": {
    "fullTemplateTypeCheck": true,
    "strictInjectionParameters": true
  }
}
